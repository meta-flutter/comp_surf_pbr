name: ubuntu-22

on:
  pull_request:
    types: [ opened, synchronize, reopened, closed ]
  release:
    types: [ published, created, edited ]
  workflow_dispatch:
  schedule:
    - cron:  '0 0 * * *'

jobs:
  build:
    runs-on: [self-hosted, linux]

    container:
      image: ghcr.io/meta-flutter/ubuntu-20-dev:main
      options:
        --user 1000
        --storage-opt overlay.mount_program=/usr/bin/fuse-overlayfs
        --storage-opt overlay.mountopt=nodev,metacopy=on,noxattrs=1
        -v /mnt/raid10/github-ci/download:/home/dev/dl:Z
        -v /mnt/raid10/github-ci/sstate/yocto/kirkstone/zero2w-drm/latest:/home/dev/sstate:Z
        -v /mnt/raid10/github-ci/artifacts/zero2w/drm:/home/dev/artifacts:Z

    steps:

      - name: Checkout
        uses: actions/checkout@v3

      - name: Install packages
        run: |
          git submodule update --init --recursive
          echo ${{ github.server_url }}
          clang++ --version
          cmake --version

      - name: Build Debug Packages
        run: |
          mkdir -p ${{github.workspace}}/build/debug
          CC=/usr/lib/llvm-14/bin/clang CXX=/usr/lib/llvm-14/bin/clang++ cmake \
            -B ${{github.workspace}}/build/debug \
            -D CMAKE_BUILD_TYPE=Debug \
            -D CMAKE_STAGING_PREFIX=${{github.workspace}}/build/staging/usr/local \
            -D BUILD_NUMBER=${GITHUB_RUN_ID} \
            -D LLVM_ROOT=/usr/lib/llvm-14
          make package -j
          ls -la _packages

      - name: Build Release Packages
        run: |
          mkdir -p ${{github.workspace}}/build/release
          CC=/usr/lib/llvm-14/bin/clang CXX=/usr/lib/llvm-14/bin/clang++ cmake \
            -B ${{github.workspace}}/build/release \
            -D CMAKE_BUILD_TYPE=Release \
            -D CMAKE_STAGING_PREFIX=${{github.workspace}}/build/staging/usr/local \
            -D BUILD_NUMBER=${GITHUB_RUN_ID} \
            -D LLVM_ROOT=/usr/lib/llvm-14
          make package -j
          ls -la _packages
